{load_file("nrngui.hoc")}
{load_file("defvar.hoc")}
load_file("common.hoc")

begintemplate Cell
public soma, syn
create soma
objref syn
proc init() {
  soma {
    nseg=5
    diam = 10  L = 100
    insert hh
    syn = new Gfluct3(.5)
    syn.on = 1
    syn.E_e = 20
    syn.h = 0.5
    syn.noiseFromRandom123(1,2,3)
  }
}

endtemplate Cell

ncell = 100
objref cell, cells, nc, netcons, st, stims, nil
pnm = new ParallelNetManager(0)
pc = pnm.pc
tvec = new Vector()
idvec = new Vector()
cells = new List()

for (gid = pc.id; gid < ncell; gid += pc.nhost) {
  pc.set_gid2node(gid, pc.id)
  cell = new Cell()
  cell.soma pc.cell(gid, new NetCon(&cell.soma.v(.5), nil))
  cell.syn.noiseFromRandom123(gid,2,3)
  cells.append(cell)
}

tvec = new Vector()
idvec = new Vector()
pc.spike_record(-1, tvec, idvec)

cvode.cache_efficient(1)
pc.set_maxstep(10)
stdinit()

if(!use_coreneuron){
   pc.nrnbbcore_write("testgfdat")
}
prun("")
spike2file()

pc.barrier()
quit()

