{load_file("nrngui.hoc")}
{load_file("defvar.hoc")}
load_file("common.hoc")

begintemplate Cell
public soma, syn, stim
create soma
objref syn, stim
proc init() {
  soma {
    nseg=1
    diam = .1  L = .1
    insert hhderiv
    insert na
    nai0_na = 30
    nao0_na = 120
    stim = new IClamp(.5)
    stim.amp= .00001
    stim.dur = 0.3
  }
}

endtemplate Cell

ncell = 1
objref pc, cell, cells, nc, netcons, st, stims, nil
pnm = new ParallelNetManager(0)
pc = pnm.pc
tvec = new Vector()
idvec = new Vector()
cells = new List()

for (gid = pc.id; gid < ncell; gid += pc.nhost) {
  pc.set_gid2node(gid, pc.id)
  cell = new Cell()
  cell.soma pc.cell(gid, new NetCon(&cell.soma.v(.5), nil))
  cells.append(cell)
}

pc.spike_record(-1, tvec, idvec)

cvode.cache_efficient(1)
pc.set_maxstep(10)
stdinit()

if(!use_coreneuron){
   pc.nrnbbcore_write("testconcdat")
}
prun("")
spike2file()

pc.barrier()
quit()

