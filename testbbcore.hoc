{load_file("nrngui.hoc")}
{load_file("defvar.hoc")}
load_file("common.hoc")

ncell = 10
objref cell, cells, nc, netcons, st, stims, nil
pnm = new ParallelNetManager(0)
pc = pnm.pc
tvec = new Vector()
idvec = new Vector()

cells = new List()

for (gid = pc.id; gid < ncell; gid += pc.nhost) {
  pc.set_gid2node(gid, pc.id)
  cell = new NetStim()
  cell.interval = 2
  cell.start = 1
  cell.noise = 1
  cell.number=1e9
  cell.noiseFromRandom123(gid, 2, 3)
  pc.cell(gid, new NetCon(cell, nil))
  cells.append(cell)
}

pc.spike_record(-1, tvec, idvec)

cvode.cache_efficient(1)
pc.set_maxstep(10)
stdinit()

if(!use_coreneuron){
   pc.nrnbbcore_write("testbbcoredat")
}
prun("")
spike2file("bbcore")

pc.barrier()
quit()
